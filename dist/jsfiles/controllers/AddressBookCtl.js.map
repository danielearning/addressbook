{"version":3,"sources":["controllers/node_modules/browser-pack/_prelude.js","dist/jsfiles/controllers/AddressBookCtl.js"],"names":[],"mappings":"AAAA;ACAA,YAMA,SAAS,sBAAqB,GAC5B,OAAQ,SAAU,cAAe,SAAU,EAAQ,GACjD,EAAO,QAAU,EAAY,QAC7B,EAAO,QAAU,WACjB,EAAO,KAAO,WAEV,EAAO,MACT,EAAO,KAAO,YACd,EAAO,eAAiB,GACxB,EAAO,gBAAkB,SACzB,EAAO,KAAO,SAEd,EAAO,KAAO,WACd,EAAO,eAAiB,SACxB,EAAO,gBAAkB,GACzB,EAAO,KAAO,IAGhB,EAAO,YAAc,WACnB,EAAO,KAAO,WACd,EAAO,eAAiB,SACxB,EAAO,gBAAkB,IAE3B,EAAO,aAAe,WACpB,EAAO,KAAO,YACd,EAAO,eAAiB,GACxB,EAAO,gBAAkB,UAG3B,EAAO,KAAO,SAAU,GACtB,QAAQ,IAAI,GACZ,EAAO,QAAU,KAKvB,QAAS,sBAAqB,GAC5B,OAAQ,SAAU,UAAW,eAAgB,oBAAqB,cAAe,SAAU,EAAQ,EAAS,EAAc,EAAS,GACjI,EAAO,KAAO,EAAO,KAED,QAAhB,EAAO,KACT,EAAO,SAEP,EAAO,MAAQ,EAAY,KAAM,GAAI,EAAa,SAAW,SAAU,GACrE,EAAO,YAAc,QAAoB,aAAZ,IAA2B,EAAQ,EAAQ,EAAM,aAAe,GACzF,GAAyC,kBAAvB,GAAQ,YAC5B,EAAQ,WAAW,KAIzB,EAAO,UAAY,WACjB,EAAO,gBAAkB,GACzB,EAAY,KAAK,EAAO,MAAO,SAAU,GAClC,EAGC,IACF,EAAQ,SAAW,aAAe,EAAM,IAH1C,EAAO,gBAAkB,EAAY,SAAS,EAAO,OAAO,OAQlE,EAAO,YAAc,WACnB,EAAA,UAAmB,EAAO,QAExB,GAAyC,kBAAvB,GAAQ,YAC5B,EAAQ,WAAW,KAtEzB,GAAI,SAA4B,kBAAX,SAAoD,gBAApB,QAAO,SAAwB,SAAU,GAAO,aAAc,IAAS,SAAU,GAAO,MAAO,IAAyB,kBAAX,SAAyB,EAAI,cAAgB,OAAS,eAAkB,IAEtO,aAAe,QAAQ,OAAO,4BAyElC,cAAa,WAAW,iBAAkB,sBAAuB,MAAM,KACvE,aAAa,WAAW,qBAAsB,sBAAuB,MAAM,KAE3E,aAAa,WAAW,gBAAiB,sBAAuB,KAAM,SACtE,aAAa,WAAW,iBAAkB,sBAAuB,KAAM,UACvE,aAAa,WAAW,mBAAoB,sBAAuB,KAAM,YACzE,aAAa,WAAW,mBAAoB,sBAAuB,KAAM","file":"controllers/AddressBookCtl.js","sourceRoot":".","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _controllers = angular.module('addressBookControllers', []);\n\nfunction createListController(params) {\n  return ['$scope', 'AddressBook', function ($scope, AddressBook) {\n    $scope.entries = AddressBook.query();\n    $scope.orderBy = 'lastname';\n    $scope.view = 'listview'; // || 'tableview';\n\n    if (params.edit) {\n      $scope.view = 'tableview';\n      $scope.listViewActive = ''; // || '';\n      $scope.tableViewActive = 'active'; // || 'active';\n      $scope.edit = 'edit';\n    } else {\n      $scope.view = 'listview';\n      $scope.listViewActive = 'active'; // || '';\n      $scope.tableViewActive = ''; // || 'active';\n      $scope.edit = '';\n    }\n\n    $scope.setListView = function () {\n      $scope.view = 'listview';\n      $scope.listViewActive = 'active';\n      $scope.tableViewActive = '';\n    };\n    $scope.setTableView = function () {\n      $scope.view = 'tableview';\n      $scope.listViewActive = '';\n      $scope.tableViewActive = 'active';\n    };\n\n    $scope.sort = function (prop) {\n      console.log(prop);\n      $scope.orderBy = prop;\n    };\n  }];\n};\n\nfunction createEditController(params) {\n  return ['$scope', '$window', '$routeParams', 'countryNameFilter', 'AddressBook', function ($scope, $window, $routeParams, $filter, AddressBook) {\n    $scope.mode = params.mode;\n    //console.log(arguments);\n    if (params.mode === 'new') {\n      $scope.entry = {};\n    } else {\n      $scope.entry = AddressBook.get({ id: $routeParams.entryId }, function (entry) {\n        $scope.countryname = _typeof($filter === 'function') && entry ? $filter(entry.countrycode) : '';\n        if ($window && typeof $window.onEditView === 'function') {\n          $window.onEditView($scope);\n        }\n      });\n    }\n    $scope.saveEntry = function () {\n      $scope.validationError = '';\n      AddressBook.save($scope.entry, function (saved) {\n        if (!saved) {\n          $scope.validationError = AddressBook.validate($scope.entry).err;\n        } else {\n          if ($window) {\n            $window.location = '#/entries/' + saved.id;\n          }\n        }\n      });\n    };\n    $scope.deleteEntry = function () {\n      AddressBook.delete($scope.entry);\n    };\n    if ($window && typeof $window.onEditView === 'function') {\n      $window.onEditView($scope);\n    }\n  }];\n};\n\n_controllers.controller('AddressListCtl', createListController({ edit: false }));\n_controllers.controller('AddressListEditCtl', createListController({ edit: true }));\n\n_controllers.controller('AddressNewCtl', createEditController({ mode: 'new' }));\n_controllers.controller('AddressEditCtl', createEditController({ mode: 'edit' }));\n_controllers.controller('AddressDetailCtl', createEditController({ mode: 'detail' }));\n_controllers.controller('AddressDeleteCtl', createEditController({ mode: 'delete' }));"]}