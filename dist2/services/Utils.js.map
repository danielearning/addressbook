{"version":3,"sources":["services/node_modules/browser-pack/_prelude.js","dist/jsfiles/services/Utils.js","node_modules/country-list/country-list.js","services/node_modules/country-list/data.json"],"names":[],"mappings":"AAAA;ACAA,YAIA,IAAI,WAAY,QAAQ,kBAGpB,QAAU,QAAQ,OAAO,sBAS7B,SAAQ,QAAQ,kBAAmB,WACjC,OAIE,SAAU,SAAkB,GAC1B,MAAwB,gBAAV,IAAsB,EAAM,QAAQ,KAAO,GAAK,EAAM,QAAQ,MAAQ,OAS1F,QAAQ,QAAQ,oBAAqB,WAEnC,OAKE,SAAU,SAAkB,GAC1B,QAAO,UAAU,QAAQ,QAU/B,QAAQ,QAAQ,UAAW,WACzB,OAIE,UAAW,WACT,OAAO,GAET,QAAS,SAAiB,GACxB,MAAoB,gBAAT,GACF,EAEF,EAAK,QAAQ,KAAM,SAAU,GAClC,MAAO,QAAO,aAAa,EAAE,WAAW,GAAK,OAGjD,QAAS,SAAiB,GACxB,MAAoB,gBAAT,GACF,EAEF,EAAK,QAAQ,KAAM,SAAU,GAClC,MAAO,QAAO,aAAa,EAAE,WAAW,GAAK,WASrD,QAAQ,OAAO,cAAe,WAC5B,MAAO,UAAU,GACf,MAAO,IAAQ,UAAU,QAAQ,MAOrC,QAAQ,OAAO,cAAe,WAC5B,MAAO,UAAU,GACf,MAAO,IAAQ,oBAAsB,EAAK,cAAgB;;;AC1F9D,YAeA,SAAS,eACP,MAAM,gBAAgB,aAAtB,OAA2C,GAAI,aAdjD,GAAI,MAAO,QAAQ,eAKf,WACA,UACJ,MAAK,QAAQ,SAAS,GACpB,QAAQ,EAAQ,KAAK,eAAiB,EAAQ,KAC9C,QAAQ,EAAQ,KAAK,eAAiB,EAAQ,OAGhD,OAAO,QAAU,YAKjB,YAAY,UAAU,QAAU,SAAiB,GAC/C,MAAO,SAAQ,EAAK,gBAGtB,YAAY,UAAU,QAAU,SAAiB,GAC/C,MAAO,SAAQ,EAAK,gBAGtB,YAAY,UAAU,SAAW,WAC/B,MAAO,MAAK,IAAI,SAAS,GACvB,MAAO,GAAQ,QAInB,YAAY,UAAU,SAAW,WAC/B,MAAO,MAAK,IAAI,SAAS,GACvB,MAAO,GAAQ,QAInB,YAAY,UAAU,QAAU,WAC9B,MAAO;;;ACxfile":"services/Utils.js","sourceRoot":".","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n// Dependencies\n\nvar countries = require('country-list')();\n\n// Utils.\nvar service = angular.module('addressBookUtils', []);\n\n/** Email validation service\n * FIXME Email validation is a pain\n * @see http://stackoverflow.com/questions/46155/validate-email-address-in-javascript\n * @see http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address\n * @see https://code.exacttarget.com/apis-sdks/rest-api/v1/address/validateEmail.html\n * \n * */\nservice.factory('EmailValidator', [function () {\n  return {\n    /** Loosest validation.\n     * Accept saving anything with an @, avoid false negatives.\n     * */\n    validate: function validate(email) {\n      return typeof email === 'string' && email.indexOf('@') > 0 && email.indexOf('\\n') < 0;\n    }\n  };\n}]);\n\n/** Country validation service\n * Checks the country code against a list.\n * @see \n * */\nservice.factory('CountryValidator', [function () {\n\n  return {\n    /** Check is a valid, known country code.\n     * @see https://www.npmjs.com/package/country-list\n     * @see http://data.okfn.org/data/country-list\n     * */\n    validate: function validate(countrycode) {\n      return countries.getName(countrycode) ? true : false;\n    }\n  };\n}]);\n\n/** Performs basic cyphering of data. This is more for demo purposes than anything\n * FIXME ROT13 is the first encoding method a kindergarten boy would think. And this is not even ROT\n * TODO Add at least GZIP compression to remove redundancy.\n * TODO Use a password, generate a long chain of random numbers and rotate against each.\n * */\nservice.factory('Cypher', [function () {\n  return {\n    /** If encryption/decryption is available.\n     * Could check against having a password present. For such a simple method, it is always true.\n     * */\n    available: function available() {\n      return true;\n    },\n    encrypt: function encrypt(text) {\n      if (typeof text !== 'string') {\n        return text;\n      }\n      return text.replace(/./g, function (x) {\n        return String.fromCharCode(x.charCodeAt(0) + 13);\n      });\n    },\n    decrypt: function decrypt(text) {\n      if (typeof text !== 'string') {\n        return text;\n      }\n      return text.replace(/./g, function (x) {\n        return String.fromCharCode(x.charCodeAt(0) - 13);\n      });\n    }\n  };\n}]);\n\n/** Converts country code to country name\n * \n * */\nservice.filter('countryName', function () {\n  return function (code) {\n    return code && countries.getName(code);\n  };\n});\n\n/** Returns an URL to a flag\n * FIXME Hotlinks to flags on the Internet. Get my own flags.\n * */\nservice.filter('countryFlag', function () {\n  return function (code) {\n    return code && 'img/flags_iso/24/' + code.toLowerCase() + '.png';\n  };\n});","'use strict'\n\nvar data = require('./data.json');\n\n/**\n * Precompute name and code lookups.\n */\nvar nameMap = {};\nvar codeMap = {};\ndata.forEach(function(country) {\n  nameMap[country.name.toLowerCase()] = country.code;\n  codeMap[country.code.toLowerCase()] = country.name;\n});\n\nmodule.exports = CountryList;\nfunction CountryList() {\n  if (!(this instanceof CountryList)) return new CountryList();\n};\n\nCountryList.prototype.getCode = function getCode(name) {\n  return nameMap[name.toLowerCase()];\n};\n\nCountryList.prototype.getName = function getName(code) {\n  return codeMap[code.toLowerCase()];\n};\n\nCountryList.prototype.getNames = function getNames() {\n  return data.map(function(country) {\n    return country.name;\n  });\n};\n\nCountryList.prototype.getCodes = function getCodes() {\n  return data.map(function(country) {\n    return country.code;\n  });\n};\n\nCountryList.prototype.getData = function getData() {\n  return data;\n};\n","module.exports=[\n  { \"code\": \"AF\", \"name\": \"Afghanistan\" },\n  { \"code\": \"AX\", \"name\": \"Åland Islands\" },\n  { \"code\": \"AL\", \"name\": \"Albania\" },\n  { \"code\": \"DZ\", \"name\": \"Algeria\" },\n  { \"code\": \"AS\", \"name\": \"American Samoa\" },\n  { \"code\": \"AD\", \"name\": \"Andorra\" },\n  { \"code\": \"AO\", \"name\": \"Angola\" },\n  { \"code\": \"AI\", \"name\": \"Anguilla\" },\n  { \"code\": \"AQ\", \"name\": \"Antarctica\" },\n  { \"code\": \"AG\", \"name\": \"Antigua and Barbuda\" },\n  { \"code\": \"AR\", \"name\": \"Argentina\" },\n  { \"code\": \"AM\", \"name\": \"Armenia\" },\n  { \"code\": \"AW\", \"name\": \"Aruba\" },\n  { \"code\": \"AU\", \"name\": \"Australia\" },\n  { \"code\": \"AT\", \"name\": \"Austria\" },\n  { \"code\": \"AZ\", \"name\": \"Azerbaijan\" },\n  { \"code\": \"BS\", \"name\": \"Bahamas\" },\n  { \"code\": \"BH\", \"name\": \"Bahrain\" },\n  { \"code\": \"BD\", \"name\": \"Bangladesh\" },\n  { \"code\": \"BB\", \"name\": \"Barbados\" },\n  { \"code\": \"BY\", \"name\": \"Belarus\" },\n  { \"code\": \"BE\", \"name\": \"Belgium\" },\n  { \"code\": \"BZ\", \"name\": \"Belize\" },\n  { \"code\": \"BJ\", \"name\": \"Benin\" },\n  { \"code\": \"BM\", \"name\": \"Bermuda\" },\n  { \"code\": \"BT\", \"name\": \"Bhutan\" },\n  { \"code\": \"BO\", \"name\": \"Bolivia, Plurinational State of\" },\n  { \"code\": \"BQ\", \"name\": \"Bonaire, Sint Eustatius and Saba\" },\n  { \"code\": \"BA\", \"name\": \"Bosnia and Herzegovina\" },\n  { \"code\": \"BW\", \"name\": \"Botswana\" },\n  { \"code\": \"BV\", \"name\": \"Bouvet Island\" },\n  { \"code\": \"BR\", \"name\": \"Brazil\" },\n  { \"code\": \"IO\", \"name\": \"British Indian Ocean Territory\" },\n  { \"code\": \"BN\", \"name\": \"Brunei Darussalam\" },\n  { \"code\": \"BG\", \"name\": \"Bulgaria\" },\n  { \"code\": \"BF\", \"name\": \"Burkina Faso\" },\n  { \"code\": \"BI\", \"name\": \"Burundi\" },\n  { \"code\": \"KH\", \"name\": \"Cambodia\" },\n  { \"code\": \"CM\", \"name\": \"Cameroon\" },\n  { \"code\": \"CA\", \"name\": \"Canada\" },\n  { \"code\": \"CV\", \"name\": \"Cape Verde\" },\n  { \"code\": \"KY\", \"name\": \"Cayman Islands\" },\n  { \"code\": \"CF\", \"name\": \"Central African Republic\" },\n  { \"code\": \"TD\", \"name\": \"Chad\" },\n  { \"code\": \"CL\", \"name\": \"Chile\" },\n  { \"code\": \"CN\", \"name\": \"China\" },\n  { \"code\": \"CX\", \"name\": \"Christmas Island\" },\n  { \"code\": \"CC\", \"name\": \"Cocos (Keeling) Islands\" },\n  { \"code\": \"CO\", \"name\": \"Colombia\" },\n  { \"code\": \"KM\", \"name\": \"Comoros\" },\n  { \"code\": \"CG\", \"name\": \"Congo\" },\n  { \"code\": \"CD\", \"name\": \"Congo, the Democratic Republic of the\" },\n  { \"code\": \"CK\", \"name\": \"Cook Islands\" },\n  { \"code\": \"CR\", \"name\": \"Costa Rica\" },\n  { \"code\": \"CI\", \"name\": \"Côte d'Ivoire\" },\n  { \"code\": \"HR\", \"name\": \"Croatia\" },\n  { \"code\": \"CU\", \"name\": \"Cuba\" },\n  { \"code\": \"CW\", \"name\": \"Curaçao\" },\n  { \"code\": \"CY\", \"name\": \"Cyprus\" },\n  { \"code\": \"CZ\", \"name\": \"Czech Republic\" },\n  { \"code\": \"DK\", \"name\": \"Denmark\" },\n  { \"code\": \"DJ\", \"name\": \"Djibouti\" },\n  { \"code\": \"DM\", \"name\": \"Dominica\" },\n  { \"code\": \"DO\", \"name\": \"Dominican Republic\" },\n  { \"code\": \"EC\", \"name\": \"Ecuador\" },\n  { \"code\": \"EG\", \"name\": \"Egypt\" },\n  { \"code\": \"SV\", \"name\": \"El Salvador\" },\n  { \"code\": \"GQ\", \"name\": \"Equatorial Guinea\" },\n  { \"code\": \"ER\", \"name\": \"Eritrea\" },\n  { \"code\": \"EE\", \"name\": \"Estonia\" },\n  { \"code\": \"ET\", \"name\": \"Ethiopia\" },\n  { \"code\": \"FK\", \"name\": \"Falkland Islands (Malvinas)\" },\n  { \"code\": \"FO\", \"name\": \"Faroe Islands\" },\n  { \"code\": \"FJ\", \"name\": \"Fiji\" },\n  { \"code\": \"FI\", \"name\": \"Finland\" },\n  { \"code\": \"FR\", \"name\": \"France\" },\n  { \"code\": \"GF\", \"name\": \"French Guiana\" },\n  { \"code\": \"PF\", \"name\": \"French Polynesia\" },\n  { \"code\": \"TF\", \"name\": \"French Southern Territories\" },\n  { \"code\": \"GA\", \"name\": \"Gabon\" },\n  { \"code\": \"GM\", \"name\": \"Gambia\" },\n  { \"code\": \"GE\", \"name\": \"Georgia\" },\n  { \"code\": \"DE\", \"name\": \"Germany\" },\n  { \"code\": \"GH\", \"name\": \"Ghana\" },\n  { \"code\": \"GI\", \"name\": \"Gibraltar\" },\n  { \"code\": \"GR\", \"name\": \"Greece\" },\n  { \"code\": \"GL\", \"name\": \"Greenland\" },\n  { \"code\": \"GD\", \"name\": \"Grenada\" },\n  { \"code\": \"GP\", \"name\": \"Guadeloupe\" },\n  { \"code\": \"GU\", \"name\": \"Guam\" },\n  { \"code\": \"GT\", \"name\": \"Guatemala\" },\n  { \"code\": \"GG\", \"name\": \"Guernsey\" },\n  { \"code\": \"GN\", \"name\": \"Guinea\" },\n  { \"code\": \"GW\", \"name\": \"Guinea-Bissau\" },\n  { \"code\": \"GY\", \"name\": \"Guyana\" },\n  { \"code\": \"HT\", \"name\": \"Haiti\" },\n  { \"code\": \"HM\", \"name\": \"Heard Island and McDonald Mcdonald Islands\" },\n  { \"code\": \"VA\", \"name\": \"Holy See (Vatican City State)\" },\n  { \"code\": \"HN\", \"name\": \"Honduras\" },\n  { \"code\": \"HK\", \"name\": \"Hong Kong\" },\n  { \"code\": \"HU\", \"name\": \"Hungary\" },\n  { \"code\": \"IS\", \"name\": \"Iceland\" },\n  { \"code\": \"IN\", \"name\": \"India\" },\n  { \"code\": \"ID\", \"name\": \"Indonesia\" },\n  { \"code\": \"IR\", \"name\": \"Iran, Islamic Republic of\" },\n  { \"code\": \"IQ\", \"name\": \"Iraq\" },\n  { \"code\": \"IE\", \"name\": \"Ireland\" },\n  { \"code\": \"IM\", \"name\": \"Isle of Man\" },\n  { \"code\": \"IL\", \"name\": \"Israel\" },\n  { \"code\": \"IT\", \"name\": \"Italy\" },\n  { \"code\": \"JM\", \"name\": \"Jamaica\" },\n  { \"code\": \"JP\", \"name\": \"Japan\" },\n  { \"code\": \"JE\", \"name\": \"Jersey\" },\n  { \"code\": \"JO\", \"name\": \"Jordan\" },\n  { \"code\": \"KZ\", \"name\": \"Kazakhstan\" },\n  { \"code\": \"KE\", \"name\": \"Kenya\" },\n  { \"code\": \"KI\", \"name\": \"Kiribati\" },\n  { \"code\": \"KP\", \"name\": \"Korea, Democratic People's Republic of\" },\n  { \"code\": \"KR\", \"name\": \"Korea, Republic of\" },\n  { \"code\": \"KW\", \"name\": \"Kuwait\" },\n  { \"code\": \"KG\", \"name\": \"Kyrgyzstan\" },\n  { \"code\": \"LA\", \"name\": \"Lao People's Democratic Republic\" },\n  { \"code\": \"LV\", \"name\": \"Latvia\" },\n  { \"code\": \"LB\", \"name\": \"Lebanon\" },\n  { \"code\": \"LS\", \"name\": \"Lesotho\" },\n  { \"code\": \"LR\", \"name\": \"Liberia\" },\n  { \"code\": \"LY\", \"name\": \"Libya\" },\n  { \"code\": \"LI\", \"name\": \"Liechtenstein\" },\n  { \"code\": \"LT\", \"name\": \"Lithuania\" },\n  { \"code\": \"LU\", \"name\": \"Luxembourg\" },\n  { \"code\": \"MO\", \"name\": \"Macao\" },\n  { \"code\": \"MK\", \"name\": \"Macedonia, the Former Yugoslav Republic of\" },\n  { \"code\": \"MG\", \"name\": \"Madagascar\" },\n  { \"code\": \"MW\", \"name\": \"Malawi\" },\n  { \"code\": \"MY\", \"name\": \"Malaysia\" },\n  { \"code\": \"MV\", \"name\": \"Maldives\" },\n  { \"code\": \"ML\", \"name\": \"Mali\" },\n  { \"code\": \"MT\", \"name\": \"Malta\" },\n  { \"code\": \"MH\", \"name\": \"Marshall Islands\" },\n  { \"code\": \"MQ\", \"name\": \"Martinique\" },\n  { \"code\": \"MR\", \"name\": \"Mauritania\" },\n  { \"code\": \"MU\", \"name\": \"Mauritius\" },\n  { \"code\": \"YT\", \"name\": \"Mayotte\" },\n  { \"code\": \"MX\", \"name\": \"Mexico\" },\n  { \"code\": \"FM\", \"name\": \"Micronesia, Federated States of\" },\n  { \"code\": \"MD\", \"name\": \"Moldova, Republic of\" },\n  { \"code\": \"MC\", \"name\": \"Monaco\" },\n  { \"code\": \"MN\", \"name\": \"Mongolia\" },\n  { \"code\": \"ME\", \"name\": \"Montenegro\" },\n  { \"code\": \"MS\", \"name\": \"Montserrat\" },\n  { \"code\": \"MA\", \"name\": \"Morocco\" },\n  { \"code\": \"MZ\", \"name\": \"Mozambique\" },\n  { \"code\": \"MM\", \"name\": \"Myanmar\" },\n  { \"code\": \"NA\", \"name\": \"Namibia\" },\n  { \"code\": \"NR\", \"name\": \"Nauru\" },\n  { \"code\": \"NP\", \"name\": \"Nepal\" },\n  { \"code\": \"NL\", \"name\": \"Netherlands\" },\n  { \"code\": \"NC\", \"name\": \"New Caledonia\" },\n  { \"code\": \"NZ\", \"name\": \"New Zealand\" },\n  { \"code\": \"NI\", \"name\": \"Nicaragua\" },\n  { \"code\": \"NE\", \"name\": \"Niger\" },\n  { \"code\": \"NG\", \"name\": \"Nigeria\" },\n  { \"code\": \"NU\", \"name\": \"Niue\" },\n  { \"code\": \"NF\", \"name\": \"Norfolk Island\" },\n  { \"code\": \"MP\", \"name\": \"Northern Mariana Islands\" },\n  { \"code\": \"NO\", \"name\": \"Norway\" },\n  { \"code\": \"OM\", \"name\": \"Oman\" },\n  { \"code\": \"PK\", \"name\": \"Pakistan\" },\n  { \"code\": \"PW\", \"name\": \"Palau\" },\n  { \"code\": \"PS\", \"name\": \"Palestine, State of\" },\n  { \"code\": \"PA\", \"name\": \"Panama\" },\n  { \"code\": \"PG\", \"name\": \"Papua New Guinea\" },\n  { \"code\": \"PY\", \"name\": \"Paraguay\" },\n  { \"code\": \"PE\", \"name\": \"Peru\" },\n  { \"code\": \"PH\", \"name\": \"Philippines\" },\n  { \"code\": \"PN\", \"name\": \"Pitcairn\" },\n  { \"code\": \"PL\", \"name\": \"Poland\" },\n  { \"code\": \"PT\", \"name\": \"Portugal\" },\n  { \"code\": \"PR\", \"name\": \"Puerto Rico\" },\n  { \"code\": \"QA\", \"name\": \"Qatar\" },\n  { \"code\": \"RE\", \"name\": \"Réunion\" },\n  { \"code\": \"RO\", \"name\": \"Romania\" },\n  { \"code\": \"RU\", \"name\": \"Russian Federation\" },\n  { \"code\": \"RW\", \"name\": \"Rwanda\" },\n  { \"code\": \"BL\", \"name\": \"Saint Barthélemy\" },\n  { \"code\": \"SH\", \"name\": \"Saint Helena, Ascension and Tristan da Cunha\" },\n  { \"code\": \"KN\", \"name\": \"Saint Kitts and Nevis\" },\n  { \"code\": \"LC\", \"name\": \"Saint Lucia\" },\n  { \"code\": \"MF\", \"name\": \"Saint Martin (French part)\" },\n  { \"code\": \"PM\", \"name\": \"Saint Pierre and Miquelon\" },\n  { \"code\": \"VC\", \"name\": \"Saint Vincent and the Grenadines\" },\n  { \"code\": \"WS\", \"name\": \"Samoa\" },\n  { \"code\": \"SM\", \"name\": \"San Marino\" },\n  { \"code\": \"ST\", \"name\": \"Sao Tome and Principe\" },\n  { \"code\": \"SA\", \"name\": \"Saudi Arabia\" },\n  { \"code\": \"SN\", \"name\": \"Senegal\" },\n  { \"code\": \"RS\", \"name\": \"Serbia\" },\n  { \"code\": \"SC\", \"name\": \"Seychelles\" },\n  { \"code\": \"SL\", \"name\": \"Sierra Leone\" },\n  { \"code\": \"SG\", \"name\": \"Singapore\" },\n  { \"code\": \"SX\", \"name\": \"Sint Maarten (Dutch part)\" },\n  { \"code\": \"SK\", \"name\": \"Slovakia\" },\n  { \"code\": \"SI\", \"name\": \"Slovenia\" },\n  { \"code\": \"SB\", \"name\": \"Solomon Islands\" },\n  { \"code\": \"SO\", \"name\": \"Somalia\" },\n  { \"code\": \"ZA\", \"name\": \"South Africa\" },\n  { \"code\": \"GS\", \"name\": \"South Georgia and the South Sandwich Islands\" },\n  { \"code\": \"SS\", \"name\": \"South Sudan\" },\n  { \"code\": \"ES\", \"name\": \"Spain\" },\n  { \"code\": \"LK\", \"name\": \"Sri Lanka\" },\n  { \"code\": \"SD\", \"name\": \"Sudan\" },\n  { \"code\": \"SR\", \"name\": \"Suriname\" },\n  { \"code\": \"SJ\", \"name\": \"Svalbard and Jan Mayen\" },\n  { \"code\": \"SZ\", \"name\": \"Swaziland\" },\n  { \"code\": \"SE\", \"name\": \"Sweden\" },\n  { \"code\": \"CH\", \"name\": \"Switzerland\" },\n  { \"code\": \"SY\", \"name\": \"Syrian Arab Republic\" },\n  { \"code\": \"TW\", \"name\": \"Taiwan, Province of China\" },\n  { \"code\": \"TJ\", \"name\": \"Tajikistan\" },\n  { \"code\": \"TZ\", \"name\": \"Tanzania, United Republic of\" },\n  { \"code\": \"TH\", \"name\": \"Thailand\" },\n  { \"code\": \"TL\", \"name\": \"Timor-Leste\" },\n  { \"code\": \"TG\", \"name\": \"Togo\" },\n  { \"code\": \"TK\", \"name\": \"Tokelau\" },\n  { \"code\": \"TO\", \"name\": \"Tonga\" },\n  { \"code\": \"TT\", \"name\": \"Trinidad and Tobago\" },\n  { \"code\": \"TN\", \"name\": \"Tunisia\" },\n  { \"code\": \"TR\", \"name\": \"Turkey\" },\n  { \"code\": \"TM\", \"name\": \"Turkmenistan\" },\n  { \"code\": \"TC\", \"name\": \"Turks and Caicos Islands\" },\n  { \"code\": \"TV\", \"name\": \"Tuvalu\" },\n  { \"code\": \"UG\", \"name\": \"Uganda\" },\n  { \"code\": \"UA\", \"name\": \"Ukraine\" },\n  { \"code\": \"AE\", \"name\": \"United Arab Emirates\" },\n  { \"code\": \"GB\", \"name\": \"United Kingdom\" },\n  { \"code\": \"US\", \"name\": \"United States\" },\n  { \"code\": \"UM\", \"name\": \"United States Minor Outlying Islands\" },\n  { \"code\": \"UY\", \"name\": \"Uruguay\" },\n  { \"code\": \"UZ\", \"name\": \"Uzbekistan\" },\n  { \"code\": \"VU\", \"name\": \"Vanuatu\" },\n  { \"code\": \"VE\", \"name\": \"Venezuela, Bolivarian Republic of\" },\n  { \"code\": \"VN\", \"name\": \"Viet Nam\" },\n  { \"code\": \"VG\", \"name\": \"Virgin Islands, British\" },\n  { \"code\": \"VI\", \"name\": \"Virgin Islands, U.S.\" },\n  { \"code\": \"WF\", \"name\": \"Wallis and Futuna\" },\n  { \"code\": \"EH\", \"name\": \"Western Sahara\" },\n  { \"code\": \"YE\", \"name\": \"Yemen\" },\n  { \"code\": \"ZM\", \"name\": \"Zambia\" },\n  { \"code\": \"ZW\", \"name\": \"Zimbabwe\" }\n]\n"]}